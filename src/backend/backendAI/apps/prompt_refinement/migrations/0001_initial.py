# Generated by Django 5.2.7 on 2025-10-27 08:11

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PromptRefinementRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("original_prompt", models.TextField(help_text="Original user prompt")),
                ("refined_prompt", models.TextField(help_text="Refined/enhanced prompt")),
                (
                    "negative_prompt",
                    models.TextField(blank=True, default="", help_text="Negative prompt extracted"),
                ),
                (
                    "confidence_score",
                    models.FloatField(default=0.0, help_text="Confidence score of refinement"),
                ),
                (
                    "method",
                    models.CharField(
                        default="rule_based",
                        help_text="Refinement method used (rule_based, llm, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, help_text="Additional context"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, help_text="Refinement metadata"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "processing_time",
                    models.FloatField(default=0.0, help_text="Processing time in seconds"),
                ),
            ],
            options={
                "db_table": "prompt_refinement_requests",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["-created_at"], name="prompt_refi_created_a6092a_idx"),
                    models.Index(fields=["method"], name="prompt_refi_method_432558_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PromptTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("portrait", "Portrait"),
                            ("landscape", "Landscape"),
                            ("fantasy", "Fantasy"),
                            ("scifi", "Sci-Fi"),
                            ("realistic", "Realistic"),
                            ("artistic", "Artistic"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("template", models.TextField(help_text="Template string with placeholders")),
                ("example_input", models.TextField(help_text="Example input")),
                ("example_output", models.TextField(help_text="Example output")),
                (
                    "quality_keywords",
                    models.JSONField(default=list, help_text="Quality keywords to add"),
                ),
                (
                    "style_keywords",
                    models.JSONField(default=list, help_text="Style keywords to add"),
                ),
                (
                    "negative_keywords",
                    models.JSONField(default=list, help_text="Default negative keywords"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "prompt_templates",
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_active"], name="prompt_temp_categor_988cc4_idx"
                    )
                ],
            },
        ),
    ]
